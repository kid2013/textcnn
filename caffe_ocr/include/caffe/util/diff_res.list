diff benchmark.hpp /home/wanwuming/src/caffe/include/caffe/util/benchmark.hpp
diff db_lmdb.hpp /home/wanwuming/src/caffe/include/caffe/util/db_lmdb.hpp
diff im2col.hpp /home/wanwuming/src/caffe/include/caffe/util/im2col.hpp
diff nccl.hpp /home/wanwuming/src/caffe/include/caffe/util/nccl.hpp
diff blocking_queue.hpp /home/wanwuming/src/caffe/include/caffe/util/blocking_queue.hpp
diff device_alternate.hpp /home/wanwuming/src/caffe/include/caffe/util/device_alternate.hpp
diff insert_splits.hpp /home/wanwuming/src/caffe/include/caffe/util/insert_splits.hpp
diff rng.hpp /home/wanwuming/src/caffe/include/caffe/util/rng.hpp
diff cudnn.hpp /home/wanwuming/src/caffe/include/caffe/util/cudnn.hpp
43a44,53
> #if CUDNN_VERSION_MIN(6, 0, 0)
>     case CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING:
>       return "CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING";
> #endif
> #if CUDNN_VERSION_MIN(7, 0, 0)
>     case CUDNN_STATUS_RUNTIME_IN_PROGRESS:
>       return "CUDNN_STATUS_RUNTIME_IN_PROGRESS";
>     case CUDNN_STATUS_RUNTIME_FP_OVERFLOW:
>       return "CUDNN_STATUS_RUNTIME_FP_OVERFLOW";
> #endif
111a122
> #if CUDNN_VERSION_MIN(6, 0, 0)
112a124,127
>       pad_h, pad_w, stride_h, stride_w, 1, 1, CUDNN_CROSS_CORRELATION,
>       dataType<Dtype>::type));
> #else
>     CUDNN_CHECK(cudnnSetConvolution2dDescriptor(*conv,
113a129
> #endif
diff format.hpp /home/wanwuming/src/caffe/include/caffe/util/format.hpp
diff io.hpp /home/wanwuming/src/caffe/include/caffe/util/io.hpp
133,155d132
< cv::Mat ReadDataAugToCVMat(const string& filename, const int x1_label, const int y1_label, 
<     const int x2_label, const int y2_label,
<     const int height, const int width, 
<     const bool is_color, const bool is_resize_pad);
< cv::Mat ReadDataAugToCVMat(const string& filename, 
<     const int height, const int width, const bool is_color, 
<     const bool is_binary, const bool is_resize_pad);
< 
< cv::Mat ReadDataAugToCVMat(const string& filename, 
<     const int height, const int width, const bool is_color, 
<     const bool is_resize_pad);
< 
< cv::Mat ReadDataAugToCVMat(const string& filename, 
<     const int height, const int width, const bool is_color);
< 
< cv::Mat ReadImageToCVMat(const string& filename,
<     const int height, const int width, const bool is_color, 
<     const bool is_binary, const bool is_resize_pad);
< 
< cv::Mat ReadImageToCVMat(const string& filename, 
<     const int height, const int width, const bool is_color, 
<     const bool is_resize_pad);
< 
171d147
< 
diff signal_handler.h /home/wanwuming/src/caffe/include/caffe/util/signal_handler.h
diff db.hpp /home/wanwuming/src/caffe/include/caffe/util/db.hpp
diff gpu_util.cuh /home/wanwuming/src/caffe/include/caffe/util/gpu_util.cuh
diff math_functions.hpp /home/wanwuming/src/caffe/include/caffe/util/math_functions.hpp
55a56,58
> void caffe_sqrt(const int N, const Dtype* a, Dtype* y);
> 
> template <typename Dtype>
131c134
< DEFINE_CAFFE_CPU_UNARY_FUNC(sign, y[i] = caffe_sign<Dtype>(x[i]));
---
> DEFINE_CAFFE_CPU_UNARY_FUNC(sign, y[i] = caffe_sign<Dtype>(x[i]))
138c141
<     y[i] = static_cast<bool>((std::signbit)(x[i])));
---
>     y[i] = static_cast<bool>((std::signbit)(x[i])))
140c143
< DEFINE_CAFFE_CPU_UNARY_FUNC(fabs, y[i] = std::fabs(x[i]));
---
> DEFINE_CAFFE_CPU_UNARY_FUNC(fabs, y[i] = std::fabs(x[i]))
215a219,221
> 
> template <typename Dtype>
> void caffe_gpu_sqrt(const int n, const Dtype* a, Dtype* y);
diff upgrade_proto.hpp /home/wanwuming/src/caffe/include/caffe/util/upgrade_proto.hpp
diff db_leveldb.hpp /home/wanwuming/src/caffe/include/caffe/util/db_leveldb.hpp
diff hdf5.hpp /home/wanwuming/src/caffe/include/caffe/util/hdf5.hpp
16c16
<     Blob<Dtype>* blob);
---
>     Blob<Dtype>* blob, bool reshape);
21c21
<     Blob<Dtype>* blob);
---
>     Blob<Dtype>* blob, bool reshape = false);
diff mkl_alternate.hpp /home/wanwuming/src/caffe/include/caffe/util/mkl_alternate.hpp
39,42c39,43
< DEFINE_VSL_UNARY_FUNC(Sqr, y[i] = a[i] * a[i]);
< DEFINE_VSL_UNARY_FUNC(Exp, y[i] = exp(a[i]));
< DEFINE_VSL_UNARY_FUNC(Ln, y[i] = log(a[i]));
< DEFINE_VSL_UNARY_FUNC(Abs, y[i] = fabs(a[i]));
---
> DEFINE_VSL_UNARY_FUNC(Sqr, y[i] = a[i] * a[i])
> DEFINE_VSL_UNARY_FUNC(Sqrt, y[i] = sqrt(a[i]))
> DEFINE_VSL_UNARY_FUNC(Exp, y[i] = exp(a[i]))
> DEFINE_VSL_UNARY_FUNC(Ln, y[i] = log(a[i]))
> DEFINE_VSL_UNARY_FUNC(Abs, y[i] = fabs(a[i]))
61c62
< DEFINE_VSL_UNARY_FUNC_WITH_PARAM(Powx, y[i] = pow(a[i], b));
---
> DEFINE_VSL_UNARY_FUNC_WITH_PARAM(Powx, y[i] = pow(a[i], b))
80,83c81,84
< DEFINE_VSL_BINARY_FUNC(Add, y[i] = a[i] + b[i]);
< DEFINE_VSL_BINARY_FUNC(Sub, y[i] = a[i] - b[i]);
< DEFINE_VSL_BINARY_FUNC(Mul, y[i] = a[i] * b[i]);
< DEFINE_VSL_BINARY_FUNC(Div, y[i] = a[i] / b[i]);
---
> DEFINE_VSL_BINARY_FUNC(Add, y[i] = a[i] + b[i])
> DEFINE_VSL_BINARY_FUNC(Sub, y[i] = a[i] - b[i])
> DEFINE_VSL_BINARY_FUNC(Mul, y[i] = a[i] * b[i])
> DEFINE_VSL_BINARY_FUNC(Div, y[i] = a[i] / b[i])
